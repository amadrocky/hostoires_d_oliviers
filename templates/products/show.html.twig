{% extends 'layout.html.twig' %}

{% block title %}Produit
{% endblock %}

{% block body %}
	<div class="container">
		<div class="white-block">
			<div class="d-none d-md-flex product-section">
				<span class="pictures-number">
					{{ product.pictures|length }}
				</span>
				<div id="demo-test-gallery" class="product-images-zone demo-gallery">
					{% for picture in product.pictures %}
						<a href="{{ asset('images/products/') }}{{ picture }}" data-size="720x1024" data-med="{{ asset('images/products/') }}{{ picture }}" data-med-size="720x1024" class="demo-gallery__img--main">
							<img src="{{ asset('images/products/') }}{{ picture }}" itemprop="thumbnail" alt="Photo" {{ product.pictures[0] == picture ? '' : 'hidden' }}/>
						</a>
					{% endfor %}
				</div>
				<div class="product-description-zone flex-fill">
					<h3 class="product-description-title">{{ product.name|capitalize }}</h3>
					<p class="product-description-subtitle">{{ product.mainDescription }}</p>
					<div class="product-description-price">
						<p>{{ product.price / 100 }}<sup>€{{ product.price|slice(-2) }}</sup>
							{% if product.originPrice %}
								<span>{{ product.originPrice / 100 }}
									€{{ product.originPrice|slice(-2) }}</span>
							{% endif %}
						</p>
					</div>
					<div class="product-description-attributes">
						<p>{{ product.mainAttribute1 }}</p>
						<p>{{ product.mainAttribute2 }}</p>
						<p>{{ product.mainAttribute3 }}</p>
						<p>{{ product.mainAttribute4 }}</p>
						<p>{{ product.mainAttribute5 }}</p>
					</div>
					<form action="{{ path('cart_add') }}" class="mt-4" method="post">
						<label for="quantity">Quantité</label>
						<input type="number" id="quantity" name="productQuantity" value="1" min="1" max="{{ product.quantity }}" style="width: 40px;">
						<input type="hidden" name="productId" value="{{ product.id }}">
						<input type="submit" class="btn btn-success btn-lg text-white text-uppercase ms-3" value="Ajouter au panier">
					</form>
					<div class="product-indication mt-3">
						<p>
							<small class="text-danger">* Livraison et plantation dans un rayon de 30 kilomètres autour d'Orléans</small>
						</p>
					</div>
				</div>
			</div>

			<div class="d-flex d-md-none product-section">
				<span class="pictures-number">
					{{ product.pictures|length }}
				</span>
				<div id="demo-test-gallery" class="product-images-zone demo-gallery">
					{% for picture in product.pictures %}
						<a href="{{ asset('images/products/') }}{{ picture }}" data-size="720x1024" data-med="{{ asset('images/products/') }}{{ picture }}" data-med-size="720x1024" class="demo-gallery__img--main">
							<img src="{{ asset('images/products/') }}{{ picture }}" itemprop="thumbnail" alt="Photo" {{ product.pictures[0] == picture ? '' : 'hidden' }}/>
						</a>
					{% endfor %}
				</div>
				<div class="product-description-zone flex-fill">
					<h3 class="product-description-title">{{ product.name|capitalize }}</h3>
					<p class="product-description-subtitle">{{ product.mainDescription }}</p>
					<div class="text-center product-description-price">
						<p>{{ product.price / 100 }}<sup>€{{ product.price|slice(-2) }}</sup>
							{% if product.originPrice %}
								<span>{{ product.originPrice / 100 }}
									€{{ product.originPrice|slice(-2) }}</span>
							{% endif %}
						</p>
					</div>
				</div>
			</div>
			<div class="d-block d-md-none">
				<div class="product-description-zone mt-3">
					<div class="text-center product-description-attributes">
						<p>{{ product.mainAttribute1 }}</p>
						<p>{{ product.mainAttribute2 }}</p>
						<p>{{ product.mainAttribute3 }}</p>
						<p>{{ product.mainAttribute4 }}</p>
						<p>{{ product.mainAttribute5 }}</p>
					</div>
				</div>
				<div class="product-description-zone mt-3">
					<form action="{{ path('cart_add') }}" class="text-center" method="post">
						<label for="quantity">Quantité</label>
						<input type="number" id="quantity" name="productQuantity" value="1" min="1" max="{{ product.quantity }}" style="width: 40px; margin-bottom: 20px;">
						<input type="hidden" name="productId" value="{{ product.id }}">
						<input type="submit" class="btn btn-success btn-lg text-white text-uppercase" value="Ajouter au panier">
					</form>
					<div class="product-indication text-center mt-3">
						<p>
							<small class="text-danger">* Livraison et plantation dans un rayon de 30 kilomètres autour d'Orléans</small>
						</p>
					</div>
				</div>
			</div>

			<!-- Root element of PhotoSwipe. Must have class pswp. -->
			<div
				class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

				<!-- Background of PhotoSwipe. It's a separate element, as animating opacity is faster than rgba(). -->
				<div class="pswp__bg"></div>

				<!-- Slides wrapper with overflow:hidden. -->
				<div class="pswp__scroll-wrap">

					<!-- Container that holds slides. PhotoSwipe keeps only 3 slides in DOM to save memory. -->
					<!-- don't modify these 3 pswp__item elements, data is added later on. -->
						<div class="pswp__container"> <div class="pswp__item"></div>
						<div class="pswp__item"></div>
						<div class="pswp__item"></div>
					</div>

					<!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. -->
					<div class="pswp__ui pswp__ui--hidden">

						<div
							class="pswp__top-bar">

							<!--  Controls are self-explanatory. Order can be changed. -->

							<div class="pswp__counter"></div>

							<button class="pswp__button pswp__button--close" title="Close (Esc)"></button>

							<button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>

							<button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>

							<!-- Preloader demo https://codepen.io/dimsemenov/pen/yyBWoR -->
							<!-- element will get class pswp__preloader--active when preloader is running -->
							<div class="pswp__preloader">
								<div class="pswp__preloader__icn">
									<div class="pswp__preloader__cut">
										<div class="pswp__preloader__donut"></div>
									</div>
								</div>
							</div>
						</div>

						<div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
							<div class="pswp__share-tooltip"></div>
						</div>

						<button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>

						<button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>

						<div class="pswp__caption">
							<div class="pswp__caption__center"></div>
						</div>
					</div>
				</div>
			</div>

			<div class="product-details-zone">
				<h4>Caractéristiques produit</h4>
				{% if product.descriptionShow1 %}
					<p>{{ product.descriptionShow1 }}</p>
					{% if product.descriptionShow2 %}
						<p>{{ product.descriptionShow2 }}</p>
					{% endif %}
					{% if product.descriptionShow3 %}
						<p>{{ product.descriptionShow3 }}</p>
					{% endif %}
				{% else %}
					<div class="alert alert-info" role="alert">
						Aucune information
					</div>
				{% endif %}
			</div>
			<div class="product-suggestions-zone"></div>
		</div>
	</div>
	<div class="product-suggest-zone d-none d-md-block">
		<div class="container py-2">
			<h3>Vous aimerez aussi</h3>
			<div class="row justify-content-center">
				{% for product in featuredProducts %}
					<div class="col col-md-4 justify-content-center">
						{% include('products/_partials/lightProduct.html.twig') %}
					</div>
				{% endfor %}
			</div>
		</div>
	</div>

	<div class="product-suggest-zone d-block d-md-none">
		<h3 class="text-center">Vous aimerez aussi</h3>
		<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
			<div class="carousel-indicators">
				<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
				<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
				<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
			</div>
			<div class="carousel-inner">
				{% for product in featuredProducts %}
					<div class="carousel-item">
						<div class="row justify-content-center">
							{% include('products/_partials/lightProduct.html.twig') %}
						</div>
					</div>
				{% endfor %}
			</div>
			<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
				<span class="carousel-control-prev-icon" aria-hidden="true"></span>
				<span class="visually-hidden">Previous</span>
			</button>
			<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
				<span class="carousel-control-next-icon" aria-hidden="true"></span>
				<span class="visually-hidden">Next</span>
			</button>
		</div>
	</div>

	<script type="text/javascript">
		try {
Typekit.load();
} catch (e) {}(function () {

var initPhotoSwipeFromDOM = function (gallerySelector) {

var parseThumbnailElements = function (el) {
var thumbElements = el.childNodes,
numNodes = thumbElements.length,
items = [],
el,
childElements,
thumbnailEl,
size,
item;

for (var i = 0; i < numNodes; i++) {
el = thumbElements[i];

// include only element nodes
if (el.nodeType !== 1) {
continue;
}

childElements = el.children;

size = el.getAttribute('data-size').split('x');

// create slide object
item = {
src: el.getAttribute('href'),
w: parseInt(size[0], 10),
h: parseInt(size[1], 10),
author: el.getAttribute('data-author')
};

item.el = el; // save link to element for getThumbBoundsFn

if (childElements.length > 0) {
item.msrc = childElements[0].getAttribute('src'); // thumbnail url
if (childElements.length > 1) {
item.title = childElements[1].innerHTML; // caption (contents of figure)
}
}

var mediumSrc = el.getAttribute('data-med');
if (mediumSrc) {
size = el.getAttribute('data-med-size').split('x');
// "medium-sized" image
item.m = {
src: mediumSrc,
w: parseInt(size[0], 10),
h: parseInt(size[1], 10)
};
}
// original image
item.o = {
src: item.src,
w: item.w,
h: item.h
};

items.push(item);
}

return items;
};

// find nearest parent element
var closest = function closest(el, fn) {
return el && (fn(el) ? el : closest(el.parentNode, fn));
};

var onThumbnailsClick = function (e) {
e = e || window.event;
e.preventDefault ? e.preventDefault() : e.returnValue = false;

var eTarget = e.target || e.srcElement;

var clickedListItem = closest(eTarget, function (el) {
return el.tagName === 'A';
});

if (! clickedListItem) {
return;
}

var clickedGallery = clickedListItem.parentNode;

var childNodes = clickedListItem.parentNode.childNodes,
numChildNodes = childNodes.length,
nodeIndex = 0,
index;

for (var i = 0; i < numChildNodes; i++) {
if (childNodes[i].nodeType !== 1) {
continue;
}

if (childNodes[i] === clickedListItem) {
index = nodeIndex;
break;
}
nodeIndex++;
}

if (index >= 0) {
openPhotoSwipe(index, clickedGallery);
}
return false;
};

var photoswipeParseHash = function () {
var hash = window.location.hash.substring(1),
params = {};

if (hash.length < 5) { // pid=1
return params;
}

var vars = hash.split('&');
for (var i = 0; i < vars.length; i++) {
if (! vars[i]) {
continue;
}
var pair = vars[i].split('=');
if (pair.length < 2) {
continue;
}
params[pair[0]] = pair[1];
}

if (params.gid) {
params.gid = parseInt(params.gid, 10);
}

return params;
};

var openPhotoSwipe = function (index, galleryElement, disableAnimation, fromURL) {
var pswpElement = document.querySelectorAll('.pswp')[0],
gallery,
options,
items;

items = parseThumbnailElements(galleryElement);

// define options (if needed)
options = {

galleryUID: galleryElement.getAttribute('data-pswp-uid'),

getThumbBoundsFn: function (index) { // See Options->getThumbBoundsFn section of docs for more info
var thumbnail = items[index].el.children[0],
pageYScroll = window.pageYOffset || document.documentElement.scrollTop,
rect = thumbnail.getBoundingClientRect();

return {
x: rect.left,
y: rect.top + pageYScroll,
w: rect.width
};
},

addCaptionHTMLFn: function (item, captionEl, isFake) {
if (! item.title) {
captionEl.children[0].innerText = '';
return false;
}
captionEl.children[0].innerHTML = item.title + '<br/><small>Photo: ' + item.author + '</small>';
return true;
}

};

if (fromURL) {
if (options.galleryPIDs) {
// parse real index when custom PIDs are used
// http://photoswipe.com/documentation/faq.html#custom-pid-in-url
for (var j = 0; j < items.length; j++) {
if (items[j].pid == index) {
options.index = j;
break;
}
}
} else {
options.index = parseInt(index, 10) - 1;
}
} else {
options.index = parseInt(index, 10);
}

// exit if index not found
if (isNaN(options.index)) {
return;
}

var radios = document.getElementsByName('gallery-style');
for (var i = 0, length = radios.length; i < length; i++) {
if (radios[i].checked) {
if (radios[i].id == 'radio-all-controls') {} else if (radios[i].id == 'radio-minimal-black') {
options.mainClass = 'pswp--minimal--dark';
options.barsSize = {
top: 0,
bottom: 0
};
options.captionEl = false;
options.fullscreenEl = false;
options.shareEl = false;
options.bgOpacity = 0.85;
options.tapToClose = true;
options.tapToToggleControls = false;
}
break;
}
}

if (disableAnimation) {
options.showAnimationDuration = 0;
}

// Pass data to PhotoSwipe and initialize it
gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);

// see: http://photoswipe.com/documentation/responsive-images.html
var realViewportWidth,
useLargeImages = false,
firstResize = true,
imageSrcWillChange;

gallery.listen('beforeResize', function () {

var dpiRatio = window.devicePixelRatio ? window.devicePixelRatio : 1;
dpiRatio = Math.min(dpiRatio, 2.5);
realViewportWidth = gallery.viewportSize.x * dpiRatio;

if (realViewportWidth >= 1200 || (! gallery.likelyTouchDevice && realViewportWidth > 800) || screen.width > 1200) {
if (! useLargeImages) {
useLargeImages = true;
imageSrcWillChange = true;
}

} else {
if (useLargeImages) {
useLargeImages = false;
imageSrcWillChange = true;
}
}

if (imageSrcWillChange && ! firstResize) {
gallery.invalidateCurrItems();
}

if (firstResize) {
firstResize = false;
}

imageSrcWillChange = false;

});

gallery.listen('gettingData', function (index, item) {
if (useLargeImages) {
item.src = item.o.src;
item.w = item.o.w;
item.h = item.o.h;
} else {
item.src = item.m.src;
item.w = item.m.w;
item.h = item.m.h;
}
});

gallery.init();
};

// select all gallery elements
var galleryElements = document.querySelectorAll(gallerySelector);
for (var i = 0, l = galleryElements.length; i < l; i++) {
galleryElements[i].setAttribute('data-pswp-uid', i + 1);
galleryElements[i].onclick = onThumbnailsClick;
}

// Parse URL and open gallery if it contains #&pid=3&gid=1
var hashData = photoswipeParseHash();
if (hashData.pid && hashData.gid) {
openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);
}
};

initPhotoSwipeFromDOM('.demo-gallery');

})();
	</script>
{% endblock %}
